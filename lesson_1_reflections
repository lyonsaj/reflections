How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
  You can easily reference accidental code pushes,
  go back and reference the way something was done previously..

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
  Manually choosing keeps the commits logical. With a normal document you save information
  on pages that are meant to be read. With development, you work on different portions of code as
  needed.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
  Because with a commit multiple files can interact with one another.

How can you use the commands git log and git diff to view the history of files?
  You can see who has made commits and what they changed.

How might using version control make you more confident to make changes that could break something?
  Because you can easily revert changes if something breaks.

Now that you have your workspace set up, what do you want to try using Git for?
  DEVELOPING

What happens when you initialize a repository? Why do you need to do it?
  Git begins tracking it. So that git knows its a repository

How is the staging area different from the working directory and the repository? What value do you think it offers?
  The staging area is where you can place a file if you are done working on it.
